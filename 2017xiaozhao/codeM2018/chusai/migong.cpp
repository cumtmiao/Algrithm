/*
 给定一个n*m的迷宫，其中任意两个相邻单元之间可能存在墙，定义从单元S到单元T的路径为从S出发，通过向上、下、左、右四个方向上的移动组合，在不通过墙的前提下，最终到达T的轨迹。数据保证迷宫中的任意两点之间存在合法的路径。现在考虑一张有k个顶点的完全图G, 其中每个顶点对应迷宫中的某个单元，并且任意两个顶点之间连边的长度为其所对应迷宫单元之间的最短路径的长度。求G的最小生成树的边权和。
输入描述:
第一行三个正整数n, m, k (2 ≤ n, m ≤ 2,000, k ≤ 100,000)。
接下来n行，每行m-1个 0/1。其中i行第j个数描述单元(i, j)和(i, j+1)之间是否存在墙。(1表示有墙，0表示没墙)
接下来n-1行，每行m个 0/1。其中i行第j个数描述单元(i, j)和(i+1, j)之间是否存在墙。(1表示有墙，0表示没墙)
接下来k行，每行两个正整数x, y，描述G中一个顶点所对应的单元，其中x代表行号，y代表列号。保证这k个顶点所对应的单元两两不同。
输出描述:
输出一行一个整数，描述最小生成树的边权和。
示例1
输入
5 5 3
0111
0010
0101
0110
0111
10000
10000
10001
10000
1 4
4 3
4 2
输出
9
*/